<?php

namespace {{ namespace }};

{{ useModels }}
use App\Models\{{ Model }};
use Illuminate\Http\Request;
use Illuminate\Http\RedirectResponse;
use Illuminate\Support\Facades\Redirect;
use Inertia\Inertia;
use Inertia\Response;

class {{ controllerClass }} extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return Response
     */
    public function index(): Response
    {
        return Inertia::render('{{ Model }}/Index', [
                'items' => {{ Model }}::all(),
        ]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return Response
     */
    public function create(): Response
    {
        return Inertia::render('{{ Model }}/Form');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  Request  $request
     * @return RedirectResponse
     */
    public function store(Request $request): RedirectResponse
    {
         //Dynamisch erstellen
         {{ Model }}::create($request->validate([
                {{ validRules }}
         ]));

        return Redirect::route('{{ model }}.index')->with('success', '{{ Model }} created.');
    }

    /**
     * Display the specified resource.
     *
     * @param {{ Model }} ${{ model }}
     * @return Response
     */
    public function show({{ Model }} ${{ model }}): Response
    {
        return Inertia::render('{{ Model }}/Show', [
                'data' => ${{ model }}
            ]);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param {{ Model }} ${{ model }}
     * @return Response
     */
    public function edit({{ Model }} ${{ model }}): Response
    {

        $allProjects = Project::select('id', 'name')->get();

        $task->load('projects');

        return Inertia::render('Task/Form', [
            'data' => $task,            // Task-Daten
            'projects' => $allProjects, // Alle Projekte als Array
        ]);

        return Inertia::render('{{ Model }}/Form', [
                'data' => ${{ model }}
            ]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param Request $request
     * @param {{ Model }} ${{ model }}
     * @return RedirectResponse
     */
    public function update(Request $request, {{ Model }} ${{ model }}): RedirectResponse
    {
        ${{ model }}->update($request->validate([
                {{ validRules }}
        ]));

        return Redirect::route('{{ model }}.index')->with('success', '{{ Model }} updated.');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param {{ Model }} ${{ model }}
     * @return RedirectResponse
     */
    public function destroy({{ Model }} ${{ model }}): RedirectResponse
    {
        ${{ model }}->delete();

        return Redirect::back()->with('success', '{{ Model }} restored.');
    }

    /**
     * Restore the specified resource.
     *
     * @param {{ Model }} ${{ model }}
     * @return RedirectResponse
     */
    public function restore({{ Model }} ${{ model }}): RedirectResponse
    {
        ${{ model }}->restore();

        return Redirect::back()->with('success', '{{ Model }} restored.');
    }
}


